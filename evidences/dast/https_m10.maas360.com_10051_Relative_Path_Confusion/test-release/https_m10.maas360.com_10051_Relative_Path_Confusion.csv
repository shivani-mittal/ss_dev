uri,method,param,attack,evidence,otherinfo,pluginid,alertRef,alert,name,riskcode,confidence,riskdesc,desc,solution,reference,cweid,wascid,sourceid
"https://m10.maas360.com/user-management/manageUsers.htm","GET",,"https://m10.maas360.com/user-management/manageUsers.htm/3kzum/gveg7","<a href="javascript:history.back()">Go back... </a>","No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.;A Content Type of 'text/html;charset=UTF-8' was specified. If the web browser is employing strict parsing rules\, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.  ;Quirks Mode is implicitly enabled via the absence of a DOCTYPE\, allowing the specified Content Type to be bypassed.","10051","10051","Relative Path Confusion","Relative Path Confusion","2","2","Medium (Medium)","The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct 'relative path' for the URL. Resources (CSS\, images\, etc.) are also specified in the page response using relative\, rather than absolute URLs. In an attack\, if the web browser parses the 'cross-content' response in a permissive manner\, or can be tricked into permissively parsing the 'cross-content' response\, using techniques such as framing\, then the web browser may be fooled into interpreting HTML as CSS (or other content types)\, leading to an XSS vulnerability. ","Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side\, or server side. Within the application\, the correct use of the '<base>' HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document. Use the 'Content-Type' HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response. Use the 'X-Content-Type-Options: nosniff' HTTP response header to prevent the web browser from 'sniffing' the content type of the response. Use a modern DOCTYPE such as '<!doctype html>' to prevent the page from being rendered in the web browser using 'Quirks Mode'\, since this results in the content type being ignored by the web browser. Specify the 'X-Frame-Options' HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks.  ","https://arxiv.org/abs/1811.00917 https://hsivonen.fi/doctype/ https://www.w3schools.com/tags/tag_base.asp ","[20](https://cwe.mitre.org/data/definitions/20.html)","20","852"
